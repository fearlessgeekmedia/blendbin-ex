#!/usr/bin/env bash
#A script to export binaries from containers to the host system in BlendOS or Distrobox.

#Check if the proper argument was given, or if the user needed help with the command.
if [ $# -eq 0 ] || [ $1 = -h ] || [ $1 = --help ] 
then
	echo -e "blendbin-ex usage: \n
blendbin-ex is used from within a Linux container on BlendOS to export a binary easily, without knowing the path.\n \
\n
In the event this program fails to export your binary, it's possible it could be a built-in shell command or you mis-typed your binary filename which you wanted to export.\n
For help with blendbin-ex \n
blendbin-ex [-h | --help]\n
To export a binary to the host system \n
blendbin-ex [ binary-name ] [ export path (optional) ]\n
\n
Without the export path, the default path will be $DISTROBOX_HOST_HOME/.local/bin/."
	exit 0
fi

# Check we're running inside a container and not on the host.
if [ ! -f /run/.containerenv ] && [ ! -f /.dockerenv ]; then
  printf >&2 "You must run %s inside a container!\n" " $(basename "$0")"
  exit 126
fi

# Check if we're in a rootful or rootless container.
if grep -q "rootless=0" /run/.containerenv 2> /dev/null; then
  rootful="--root"
fi

# We're working with HOME, so we must run as USER, not as root.
if [ "$(id -u)" -eq 0 ]; then
  printf >&2 "You must not run %s as root!\n" " $(basename "$0")"
  exit 1
fi

# Let's get the container name
if  [ -n "${CONTAINER_ID}" ]; then
  container_name="${CONTAINER_ID}"
# if the variable is not set, let's fall back to some tricks.                                  
elif  [ -e /.dockerenv ]; then
  # we're in docker, let's use this trick
  container_name=$(grep "memory:/" < /proc/self/cgroup | sed 's|.*/||')
elif [ -e /run/.containerenv ]; then
  # we're in podman, use this other trick
  container_name=$(grep "name=" /run/.containerenv | cut -d'=' -f2- | tr -d '"')
fi
# If one of the previous methods didn't work
# let's fallback to a more simple way but error prone
if [ -z "${container_name}" ]; then
  container_name=$(uname -n | cut -d'.' -f1)
fi


progToExport=$(command -v $1)
if [ $# = 1 ]
then
	if [ $DISTROBOX_HOST_HOME ]
	then
		exportLocation="$DISTROBOX_HOST_HOME/.local/bin"
	else
		exportLocation="$HOME/.local/bin"
	fi
else
	exportLocation=$2
	echo $exportLocation
fi

exportCommand="distrobox-export --bin $progToExport --export-path $exportLocation"
$exportCommand
